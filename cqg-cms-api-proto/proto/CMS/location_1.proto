// CMS API Location entity Protocol.

syntax = "proto2";

package location_1;

import "common/shared_1.proto";

message LocationScopeRequest
{
    // [required] Request identifier.
    // It should be unique to match with operation result.
    optional uint32 id = 1;

    // Request for connection points.
    optional ConnectionPointListRequest connection_point_list_request = 2;
}

message LocationScopeResult
{
    // ID of a corresponding request.
    optional uint32 request_id = 1;

    // Request tracking number generated by CMS API
    // Used by client to cancel deferred request
    optional uint64 tracking_number = 2;

    // Operation status.
    // This field is associated with common_1.OperationStatus enum.
    optional uint32 operation_status = 3;

    // Failure details.
    optional shared_1.Text error_message = 4;

    // Available connection point list.
    optional ConnectionPointListResult connection_point_list_result = 5;
}

// Get a list of connection points.
message ConnectionPointListRequest
{
    // Brokerages to which connection points with brokerage_authorization_required must have authorization.
    // If not provided all connection points available to current admin login will be returned.
    repeated string brokerage_ids  = 1;
}

message ConnectionPointListResult
{
    repeated ConnectionPoint connection_points = 1;
}

message ConnectionPoint
{
    // [required] Connection Point id.
    optional string id = 1;

    // [required] Connection Point Name.
    optional shared_1.Text name = 2;

    // [required] Corresponding location id.
    optional string trade_location_id = 3;

    // [required] Flag, indicating if connection point requires brokerage authorization.
    optional bool brokerage_authorization_required = 4;

    // Brokerages which have authorization for connection point, which requires authorization.
    repeated string authorized_brokerage_ids = 5;
}